
EE422C Project 3 (Word Ladder) Test Plan

Samuel Patterson svp395
<Student Name> <Student EID>
Fall 2016
Test plan summary

For BFS testing, we did not use jUnit. Instead we wrote our own test initializations that main 
would call, and tested individual methods at a time to ensure they worked individually before 
connecting them all. After all methods passed their own tests, they were combined to 'complete 
the picture'. We covered as many cases as we could think of, and our solution passed them all.

For DFS testing, we


/* BFS */

1.
a) findFriends method test
b) Checks for words only one letter away from given start word. Adds them to queue
and removes them from dictonary.
c) create a dictionary of words with one letter difference.
d) all created nodes should have valid parent and be removed from dictionary
e) proper creation and placement/removal of nodes.
f) quick test, < 1 second

2.
a) getList method test
b) checks construction of list from end word to start word (construction of ladder)
c) create a valid linked list of nodes from end word to start
d) correct ladder
e) invalid ladder
f) passed all

3.
a) isNeighbor method test
b) checks that only valid words are counted as neighbor (ie one letter away from start word)
c) create a list of what should be neighbors and what should not be
d) 'true' returned for valid neighbors
e) passes if only real neighbors return true
f) passed all

4.
a) time test
b) ensures that wordLadderBFS returns ladder in appropriate time
c) list of various 5 letter start and end words 
d) valid ladder in appropriate time
e) fails if it takes longer than 5 seconds
f) passed all

5.
a) length test
b) ensures that wordLadderBFS returns the shortest possible ladder
c) list of various 5 letter start and end words
d) valid ladder with minimal rungs
e) fails if shorter ladder is possible
f) none


/* DFS */

1.
a) Test name
b) What feature does the test cover – 1-2 phrases or sentences.
c) Set up for the test – initialization.
d) Expected output for a good module.
e) The pass/fail criterion for the test.
f) Any comments, if any.

2.
a) Test name
b) What feature does the test cover – 1-2 phrases or sentences.
c) Set up for the test – initialization.
d) Expected output for a good module.
e) The pass/fail criterion for the test.
f) Any comments, if any.

3.
a) Test name
b) What feature does the test cover – 1-2 phrases or sentences.
c) Set up for the test – initialization.
d) Expected output for a good module.
e) The pass/fail criterion for the test.
f) Any comments, if any.

4.
a) Test name
b) What feature does the test cover – 1-2 phrases or sentences.
c) Set up for the test – initialization.
d) Expected output for a good module.
e) The pass/fail criterion for the test.
f) Any comments, if any.

5.
a) Test name
b) What feature does the test cover – 1-2 phrases or sentences.
c) Set up for the test – initialization.
d) Expected output for a good module.
e) The pass/fail criterion for the test.
f) Any comments, if any.

